// <auto-generated />
using System;
using HastaneRandevuSistemi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HastaneRandevuSistemi.Migrations
{
    [DbContext(typeof(HastaneContext))]
    partial class HastaneContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Doktor", b =>
                {
                    b.Property<int>("doktorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("doktorID"), 1L, 1);

                    b.Property<string>("doktorAD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hastaneID")
                        .HasColumnType("int");

                    b.Property<int>("hastanelerhastaneID")
                        .HasColumnType("int");

                    b.Property<int>("polID")
                        .HasColumnType("int");

                    b.Property<int>("polikliniklerpolID")
                        .HasColumnType("int");

                    b.HasKey("doktorID");

                    b.HasIndex("hastanelerhastaneID");

                    b.HasIndex("polikliniklerpolID");

                    b.ToTable("Doktor");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Hastaneler", b =>
                {
                    b.Property<int>("hastaneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("hastaneID"), 1L, 1);

                    b.Property<int>("IlcelerilceID")
                        .HasColumnType("int");

                    b.Property<int>("SehirlersehirID")
                        .HasColumnType("int");

                    b.Property<string>("hastaneAD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ilceID")
                        .HasColumnType("int");

                    b.Property<int>("sehirID")
                        .HasColumnType("int");

                    b.HasKey("hastaneID");

                    b.HasIndex("IlcelerilceID");

                    b.HasIndex("SehirlersehirID");

                    b.ToTable("Hastane");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Ilceler", b =>
                {
                    b.Property<int>("ilceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ilceID"), 1L, 1);

                    b.Property<string>("ilceAD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sehirID")
                        .HasColumnType("int");

                    b.Property<int>("sehirlersehirID")
                        .HasColumnType("int");

                    b.HasKey("ilceID");

                    b.HasIndex("sehirlersehirID");

                    b.ToTable("Ilce");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Kullanici", b =>
                {
                    b.Property<int>("kullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("kullaniciID"), 1L, 1);

                    b.Property<int>("ailehID")
                        .HasColumnType("int");

                    b.Property<int>("doktorlardoktorID")
                        .HasColumnType("int");

                    b.Property<string>("kullaniciAD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("kullaniciDOGUM")
                        .HasColumnType("datetime2");

                    b.Property<string>("kullaniciSIFRE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("kullaniciSOYAD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kullaniciTC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("kullaniciID");

                    b.HasIndex("doktorlardoktorID");

                    b.ToTable("Kullanici");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Personel", b =>
                {
                    b.Property<int>("PID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PID"), 1L, 1);

                    b.Property<string>("PPasword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PID");

                    b.ToTable("Personel");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Poliklinik", b =>
                {
                    b.Property<int>("polID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("polID"), 1L, 1);

                    b.Property<int?>("hastaneID")
                        .HasColumnType("int");

                    b.Property<int>("hastanelerhastaneID")
                        .HasColumnType("int");

                    b.Property<string>("polAD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("polID");

                    b.HasIndex("hastanelerhastaneID");

                    b.ToTable("Poliklinik");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Randevu", b =>
                {
                    b.Property<int>("randevuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("randevuID"), 1L, 1);

                    b.Property<int>("doktorID")
                        .HasColumnType("int");

                    b.Property<int>("kullaniciID")
                        .HasColumnType("int");

                    b.Property<string>("randevuSAAT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("randevuTARIH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("randevuTUR")
                        .HasColumnType("int");

                    b.Property<int>("turrandevuTUR")
                        .HasColumnType("int");

                    b.HasKey("randevuID");

                    b.HasIndex("doktorID");

                    b.HasIndex("kullaniciID");

                    b.HasIndex("turrandevuTUR");

                    b.ToTable("Randevu");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.RandevuTur", b =>
                {
                    b.Property<int>("randevuTUR")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("randevuTUR"), 1L, 1);

                    b.Property<string>("randevuAD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("randevuTUR");

                    b.ToTable("RandevuTur");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Sehirler", b =>
                {
                    b.Property<int>("sehirID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sehirID"), 1L, 1);

                    b.Property<string>("sehirAD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sehirID");

                    b.ToTable("Sehirler");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Doktor", b =>
                {
                    b.HasOne("HastaneRandevuSistemi.Models.Hastaneler", "hastaneler")
                        .WithMany("Doktorlar")
                        .HasForeignKey("hastanelerhastaneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HastaneRandevuSistemi.Models.Poliklinik", "poliklinikler")
                        .WithMany("doktorlar")
                        .HasForeignKey("polikliniklerpolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hastaneler");

                    b.Navigation("poliklinikler");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Hastaneler", b =>
                {
                    b.HasOne("HastaneRandevuSistemi.Models.Ilceler", "Ilceler")
                        .WithMany("hastaneler")
                        .HasForeignKey("IlcelerilceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HastaneRandevuSistemi.Models.Sehirler", "Sehirler")
                        .WithMany("hastaneler")
                        .HasForeignKey("SehirlersehirID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ilceler");

                    b.Navigation("Sehirler");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Ilceler", b =>
                {
                    b.HasOne("HastaneRandevuSistemi.Models.Sehirler", "sehirler")
                        .WithMany("ilceler")
                        .HasForeignKey("sehirlersehirID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sehirler");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Kullanici", b =>
                {
                    b.HasOne("HastaneRandevuSistemi.Models.Doktor", "doktorlar")
                        .WithMany("kullanicilar")
                        .HasForeignKey("doktorlardoktorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("doktorlar");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Poliklinik", b =>
                {
                    b.HasOne("HastaneRandevuSistemi.Models.Hastaneler", "hastaneler")
                        .WithMany("Poliklinikler")
                        .HasForeignKey("hastanelerhastaneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hastaneler");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Randevu", b =>
                {
                    b.HasOne("HastaneRandevuSistemi.Models.Doktor", "doktorlar")
                        .WithMany("randevular")
                        .HasForeignKey("doktorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HastaneRandevuSistemi.Models.Kullanici", "kullanici")
                        .WithMany("randevular")
                        .HasForeignKey("kullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HastaneRandevuSistemi.Models.RandevuTur", "tur")
                        .WithMany("randevular")
                        .HasForeignKey("turrandevuTUR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("doktorlar");

                    b.Navigation("kullanici");

                    b.Navigation("tur");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Doktor", b =>
                {
                    b.Navigation("kullanicilar");

                    b.Navigation("randevular");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Hastaneler", b =>
                {
                    b.Navigation("Doktorlar");

                    b.Navigation("Poliklinikler");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Ilceler", b =>
                {
                    b.Navigation("hastaneler");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Kullanici", b =>
                {
                    b.Navigation("randevular");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Poliklinik", b =>
                {
                    b.Navigation("doktorlar");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.RandevuTur", b =>
                {
                    b.Navigation("randevular");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.Sehirler", b =>
                {
                    b.Navigation("hastaneler");

                    b.Navigation("ilceler");
                });
#pragma warning restore 612, 618
        }
    }
}
